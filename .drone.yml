kind: pipeline
type: docker
name: mypubdemo

steps:
  - name: build-jar # 流水线名称
    image: maven:3.8.5-openjdk-8 # 定义创建容器的Docker镜像
    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: maven-cache
        path: /mnt/maven/.m2 # 将maven下载依赖的目录挂载出来，防止重复下载
      - name: maven-build
        path: /mnt/app/build # 将应用打包好的Jar和执行脚本挂载出来
    commands: # 定义在Docker容器中执行的shell命令
      - mvn clean package -DskipTests=true # 应用打包命
      - cp target/demo.jar /mnt/app/build/demo.jar
      - cp entrypoint.sh /mnt/app/build/
      - cp Dockerfile /mnt/app/build/
      - cp run.sh /mnt/app/build/

  - name: build-docker
    image: plugins/docker
    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: maven-build
        path: /mnt/app/build # 将应用打包好的Jar和执行脚本挂载出来
      - name: docker
        path: /var/run/docker.sock # 挂载宿主机的docker
    settings:
      dockerfile: /mnt/app/build/Dockerfile
    commands: # 定义在Docker容器中执行的shell命令
      - cd /mnt/app/build
      - chmod +x run.sh
      - sh run.sh
      - docker ps

volumes: # 定义流水线挂载目录，用于共享数据
  - name: maven-build
    host:
      path: /mnt/maven/build # 从宿主机中挂载的目录
  - name: maven-cache
    host:
      path: /mnt/maven/cache
  - name: docker
    host:
      path: /var/run/docker.sock